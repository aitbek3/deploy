# Generated by Django 5.1.4 on 2024-12-07 06:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Названия факультета')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Названия факультета')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Названия факультета')),
                ('name_ky', models.CharField(max_length=100, null=True, verbose_name='Названия факультета')),
                ('description', models.TextField(verbose_name='Описание факультета')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.PositiveIntegerField(verbose_name='Аудитория')),
                ('building', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=10, verbose_name='Этаж')),
                ('capacity', models.CharField(max_length=100, verbose_name='На сколько людей')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=100, verbose_name='Названия курса')),
                ('description', models.TextField(verbose_name='Описание о курсе')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='custom_user_set', related_query_name='user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions_set', related_query_name='user', to='auth.permission')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Имя задачи')),
                ('description', models.TextField(verbose_name='Описание о задаче')),
                ('due_date', models.CharField(max_length=100, verbose_name='До какого дня')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.course')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Уроки')),
                ('bio', models.TextField(verbose_name='Описания о профессоре')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.professor'),
        ),
        migrations.AddField(
            model_name='course',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='faculty.role'),
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateField(verbose_name='Начало урока')),
                ('end_time', models.DateField(verbose_name='Конец урока')),
                ('day_of_week', multiselectfield.db.fields.MultiSelectField(choices=[('понедельник', 'понедельник'), ('вторник', 'вторник'), ('среда', 'среда'), ('четверг', 'четверг'), ('пятница', 'пятница'), ('суббота', 'суббота'), ('воскресенье', 'воскресенье')], max_length=100, verbose_name='Дни')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.room')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.course')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enrollment_date', models.DateField(verbose_name='В каком году началось учеба')),
                ('graduation_date', models.DateField(verbose_name='В каком году закончиться учеба')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Submitting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment', models.CharField(max_length=100, verbose_name='Имя задачи')),
                ('submission_date', models.DateField(verbose_name='Дз тапшыруу')),
                ('grade', models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], max_length=10, verbose_name='Оценка')),
                ('feedback', models.TextField(verbose_name='Отзывы о задаче')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='faculty.student')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileProfessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, unique=True)),
                ('last_name', models.CharField(max_length=100, unique=True)),
                ('age', models.PositiveIntegerField(default=0)),
                ('country', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='professor',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='faculty.userprofileprofessor'),
        ),
        migrations.CreateModel(
            name='UserProfileStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, unique=True)),
                ('last_name', models.CharField(max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=20, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='faculty.userprofilestudent'),
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_enrolled', models.CharField(max_length=100)),
                ('grade', models.CharField(choices=[('2', '2'), ('3', '3'), ('4', '4'), ('5', '5')], default=0, max_length=10, verbose_name='Оценка')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='faculty.userprofilestudent')),
            ],
        ),
    ]
